@model NuSurvey.MVC.Models.OpenRegisterModel
@using NuSurvey.Core.Resources
@using NuSurvey.MVC.Controllers.Filters
@using NuSurvey.MVC.Helpers
@{
	ViewBag.Title = "Register";
}


@section AdditionalScripts{

    <script type="text/javascript">
        $(document).ready(function () {
            $("#Email").blur(function(event){
                if($(this).hasClass("warning")){
                    $(this).removeClass("warning");
                    $(".field-warning").hide();
                }
                if($(this).hasClass("input-validation-error")){
                    //Do nothing
                }
                else{
                    var emailVal = $(this).val().toLowerCase();                                   
                    if(emailVal != null && emailVal != "" && emailVal.match(@StaticValues.EmailWarningRegEx) == null){
                        $(this).addClass("warning");
                        $(this).next().text("This may be invalid");   
                        $(".field-warning").show();                     
                    }
                }
                 
            });
        });
    </script>    
}


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/mvc/3.0/jquery.validate.unobtrusive.js" type="text/javascript"></script>

@using (Html.BeginForm(null, null, FormMethod.Post, new{id = "openRegister"}))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)

    <fieldset>
        @{var isChecked = "";}
        
        <h3>Complete the form below to create a new account with Healthy Kids. Once the account has been created a confirmation and password will be sent to your email address. This may take a few minutes to receive.</h3>
        <p><strong>Note!</strong> To answer surveys anonymously,  you don't have to register. Just click the image on the home page to answer surveys for Parents.</p>
        <ul>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.Email)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.Email)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </li>

            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.Name)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Name)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Name)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.Title)
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Title)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Title)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.Agency)
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Agency)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Agency)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.Street)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Street)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Street)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.City)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.City)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.City)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.State)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.State)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.State)
                </div>
            </li>
            <li>
                <div class="editor-label required">
                    @Html.LabelFor(model => model.User.Zip)<span>*</span>
                </div>
                <div class="editor-field wideText">
                    @Html.EditorFor(model => model.User.Zip)
                    <span class="field-warning"></span>
                    @Html.ValidationMessageFor(model => model.User.Zip)
                </div>
            </li>
            <fieldset>
                <legend>Target Population</legend>
                <li>
                    <div class="editor-field wideText">
                        @Html.EditorFor(model => model.User.TargetPopulationWic) @Html.LabelFor(model => model.User.TargetPopulationWic)
                        <span class="field-warning"></span>
                        @Html.ValidationMessageFor(model => model.User.TargetPopulationWic)
                    </div>
                </li>
                <li>
                    <div class="editor-field wideText">
                        @Html.EditorFor(model => model.User.TargetPopulationSnap) @Html.LabelFor(model => model.User.TargetPopulationSnap)
                        <span class="field-warning"></span>
                        @Html.ValidationMessageFor(model => model.User.TargetPopulationSnap)
                    </div>
                </li>
                <li>
                    <div class="editor-field wideText">
                        @Html.EditorFor(model => model.User.TargetPopulationHeadStart) @Html.LabelFor(model => model.User.TargetPopulationHeadStart)
                        <span class="field-warning"></span>
                        @Html.ValidationMessageFor(model => model.User.TargetPopulationHeadStart)
                    </div>
                </li>
                <li>
                    <div class="editor-field wideText">
                        @Html.EditorFor(model => model.User.TargetPopulationEfnep) @Html.LabelFor(model => model.User.TargetPopulationEfnep)
                        <span class="field-warning"></span>
                        @Html.ValidationMessageFor(model => model.User.TargetPopulationEfnep)
                    </div>
                </li>
                <li>
                    <div class="editor-field wideText">
                        @Html.EditorFor(model => model.User.TargetPopulationLowIncome) @Html.LabelFor(model => model.User.TargetPopulationLowIncome)
                        <span class="field-warning"></span>
                        @Html.ValidationMessageFor(model => model.User.TargetPopulationLowIncome)
                    </div>
                </li>
                <li>
                    <div class="editor-field wideText">
                        @Html.EditorFor(model => model.User.TargetPopulationOther) @Html.LabelFor(model => model.User.TargetPopulationOther)
                        <span class="field-warning"></span>
                        @Html.ValidationMessageFor(model => model.User.TargetPopulationOther)
                    </div>
                </li>
            </fieldset>

            <li>
                <div class="editor-label">
                    @Html.Label("Roles")
                </div>
                <div class="editor-field">
                    <ul class="checkbox_container">
                        <li>
                            @{
    isChecked = Model.Roles != null && Model.Roles.Contains(RoleNames.User) ? "checked=\"checked\"" : "";
                            }
                            <input class="checkbox" type="checkbox" value="@ViewBag.UserRole" @isChecked name="Roles" /> Educator
                        </li>
                        <li>
                            @{
    isChecked = Model.Roles != null && Model.Roles.Contains(RoleNames.ProgramDirector) ? "checked=\"checked\"" : "";
                            }
                            <input class="checkbox" type="checkbox" value="@ViewBag.ProgramDirectorRole" @isChecked name="Roles" /> Program Director
                        </li>
                    </ul>
                </div>
            </li>
            <li>
                <div class="editor-label required">

                    @Html.Label("Permissions for use")<span>*</span>
                    <p>
                        You are requesting permission to download the <i>Healthy Kids</i> pediatric obesity risk assessment surveys to your computer. <i>Healthy Kids</i>© is protected by copyright laws and is property of University of California. By downloading <i>Healthy Kids</i>, you agree to keep the original form unchanged. This means that you are not entitled to modify or use the photographs for any other purpose. In addition, all references and logos may not be altered in any way nor removed. You will need to print the survey "as is".
                    </p>
                    <p>
                        In case of a doubt concerning your planned use of the <i>Healthy Kids</i> surveys or content (photographs, logo or survey questions), please <a href="mailto:healthykids@ucdavis.edu">click here</a> to contact us directly.
                    </p>
                </div>
                <div class="editor-field">
                    <ul class="checkbox_container">
                        <li>
                            @{
    isChecked = Model.Agree == "agreed" ? "checked=\"checked\"" : "";
                            }
                            <input class="checkbox" type="checkbox" value="agreed" @isChecked name="Agree" /> I Agree
                            @Html.ValidationMessage("Agree")
                        </li>
                    </ul>
                </div>
            </li>

            <li>
                <div class="editor-field">
                    @Html.GenerateCaptcha()
                    @Html.ValidationMessage("Captcha")
                </div>
            </li>
            <li>
                @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
                <label>&nbsp;</label>
                <input class="button submit" type="submit" value="Submit" /> | @Html.ActionLink("Cancel", "Index", "Home")
            </li>
        </ul>

    </fieldset>
}


