@model NuSurvey.MVC.Models.EditUserViewModel

@{
    ViewBag.Title = "Delete User";
}

@section SubNav {
    <ul class="navigation">
        <li>
            <a href="@Url.Action("Administration", "Home")">Admin Home</a> 
        </li>
        <li>
            <a href="@Url.Action("ManageUsers", "Account")">Manage Users</a> 
        </li>
        <li>
            Delete
        </li>
    </ul>
}


    @Html.Partial("_UserDetails")

<fieldset class="display-form">
    <legend>User Details</legend>
    <ul>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.Name)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.Name)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.Title)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.Title)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.Agency)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.Agency)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.Street)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.Street)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.City)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.City)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.State)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.State)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.Zip)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.Zip)
            </div>
        </li>
        
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.TargetPopulationWic)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.TargetPopulationWic)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.TargetPopulationSnap)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.TargetPopulationSnap)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.TargetPopulationHeadStart)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.TargetPopulationHeadStart)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.TargetPopulationEfnep)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.TargetPopulationEfnep)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.TargetPopulationLowIncome)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.TargetPopulationLowIncome)
            </div>
        </li>
        <li>
            <div class="display-label">
                @Html.LabelFor(model => model.UserDetails.TargetPopulationOther)
            </div>
            <div class="display-details">
                @Html.DisplayFor(model => model.UserDetails.TargetPopulationOther)
            </div>
        </li>
    </ul>
</fieldset>

<fieldset class="display-form"> 
<legend>Roles</legend>
<ul>
@*		<li>
			<div class="display-label">Email</div>
			<div class="display-field">@Model.Email</div>
		</li>*@
		<li>
            <div class="display-label">
				@Html.Label("Is Admin") 
			</div>
            <div class="display-details">
				@Html.DisplayFor(x => x.IsAdmin) 
			</div>
		</li>
		<li>
            <div class="display-label">
				@Html.Label("Is User")
			</div>
            <div class="display-details">
				@Html.DisplayFor(x => x.IsUser)
			</div>
		</li>
</ul>
</fieldset>



@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()    

<fieldset>
<h3>Are you sure you want to delete this user?</h3>
	<ul>   
        <li>
            <div class="editor-label">
				@Html.Label("Confirm Delete") 
			</div>
			<div class="editor-field">
				@Html.EditorFor(model => model.Confirm)
			</div>
        </li>
		
		<li>
			@* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			<label>&nbsp;</label>
			<input class="button" type="submit" value="Delete" /> | @Html.ActionLink("Cancel", "ManageUsers")
		</li>
	</ul>
</fieldset>
}


