@using NuSurvey.MVC.Helpers
@model NuSurvey.MVC.Controllers.SingleAnswerSurveyResponseViewModel


@{
    ViewBag.Title = "Start Survey";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
    if (Model.Survey.ShortName.IsSpanish())
    {
        ViewBag.IsSpanish = true;
    }
    if (Model.Survey.QuizType.Equals("Kiosk", StringComparison.OrdinalIgnoreCase))
    {
        ViewBag.IsKiosk = true;
    }
    else
    {
        ViewBag.IsKiosk = false;
    }
}

@section AdditionalScripts{
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/mvc/3.0/jquery.validate.unobtrusive.js" type="text/javascript"></script>

  <script type="text/javascript">
      $(document).ready(function () {
          var percent = (@Model.AnsweredQuestions / @Model.TotalActiveQuestions) * 100;
          $("#progressbar").progressbar({ value: percent });
      });
  </script>

}

@if (Model.CannotContinue)
{ 
    <fieldset class="display-form">
        <ul>
            <li>
			    @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			    <label>&nbsp;</label>
                <a href="@Url.Action("DeletePending", "SurveyResponse", new { id = @Model.PendingSurveyResponse.Id, fromAdmin = false})">Delete Survey</a> 
                | @Html.ActionLink("Cancel", "Index")
            </li>
        </ul>
    </fieldset>
}
else if (Model.PendingSurveyResponseExists)
{
    @Html.Partial("_SurveyResponseProgress")
    <fieldset class="display-form">
        <ul>
            <li>
			    @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
			    <label>&nbsp;</label>
                <a href="@Url.Action("AnswerNext", "SurveyResponse", new { id = @Model.PendingSurveyResponse.Id })">Continue</a>
			    | <a href="@Url.Action("DeletePending", "SurveyResponse", new { id = @Model.PendingSurveyResponse.Id, fromAdmin = false})">Delete Survey</a> 
                | @Html.ActionLink("Cancel", "Index")
            </li>
        </ul>
    </fieldset>

}
else
{ 
    
    
    
using (Html.BeginForm())
{        
	    @Html.AntiForgeryToken()
	    @Html.ValidationSummary(true)
        @Html.HiddenFor(x => x.Survey.Id)
        @Html.HiddenFor(x => x.PublicGuid)

        var questionClass = string.Format("display-{0}-question", Model.Survey.ShortName.ToLower().Trim());
    
        <fieldset class="@questionClass">
        @* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
        Example: Dinosaur 1  *@
	        @*<legend>Survey Response</legend>*@
	        @*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	        <ul>
		        <li>
		            <div class="editor-label required">
		                @if (Model.Survey.ShortName.IsSpanish())
		                {
		                    if (ViewBag.IsKiosk)
		                    {
		                        @Html.Label("Nombre de su hijo")<span>*</span>
		                    }
		                    else
		                    {
		                        @Html.Label("Su nombre")<span>*</span>
		                    }

		                }
		                else
		                {
		                    if (ViewBag.IsKiosk)
		                    {
		                        @Html.Label("Your Child\'s Name")<span>*</span>
		                    }
		                    else
		                    {
		                        @Html.Label("Your First Name")<span>*</span>
		                    }
		                }		                    
		            </div>
		            <div class="editor-field">
		                @if (Model.Survey.ShortName.IsSpanish())
                        {
                            <input autocomplete="off" class="text-box single-line" data-val="true" data-val-length="El nombre del campo debe ser una cadena con una longitud máxima de 50." data-val-length-max="50" data-val-required="Se requiere que el campo Nombre." id="SurveyResponse_StudentId" name="SurveyResponse.StudentId" type="text" value="">
                        }
                        else
                        {
		                    @Html.EditorFor(model => model.SurveyResponse.StudentId, new { htmlAttributes = new { autocomplete = "off" }})
                        }
		                @Html.ValidationMessageFor(model => model.SurveyResponse.StudentId)
		            </div>
		        </li>
		        <li>
			        @* For the clear and submit buttons an empty label is required. Example: <label>&nbsp;</label> *@
		            <label>&nbsp;</label>
                    @if (Model.Survey.ShortName.IsSpanish())
                    {
                        <input class="button" type="submit" value="Siguiente"/>
                    }
                    else
                    {
                        <input class="button" type="submit" value="Next"/>
                    }		         
		        </li>
	        </ul>
        </fieldset>
    }
    
    @Html.Partial("_SurveyResponseProgress")
}


