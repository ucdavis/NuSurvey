@using NuSurvey.Core.Domain
@model NuSurvey.MVC.Controllers.QuestionViewModel

@{
    ViewBag.Title = "Edit Question";
}

@section SubNav {
    <ul class="navigation">
        <li>
            <a href="@Url.Action("Administration", "Home")">Admin Home</a> 
        </li>
        <li>
            <a href="@Url.Action("Index", "Survey")">Surveys</a> 
        </li>
        <li>
            <a href="@Url.Action("Edit", "Survey", new { id = @Model.Survey.Id })">Edit Survey</a> 
        </li>
        @if (Model.Category != null)
        {
            <li>
                <a href="@Url.Action("Edit", "Category", new { id = @Model.Category.Id })">Edit Category</a> 
            </li>
        }
        <li>
            Edit
        </li>
    </ul>
}

@section AdditionalScripts{
    <script type="text/javascript" src='@Url.Content("~/Scripts/jquery.tablednd_0_5.js")'></script>
    <script type="text/javascript" src='@Url.Content("~/Scripts/jquery.bt.min.js")'></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // attach event handlers
            $("img#AddResponses").click(function () { AddResponseInput(); });

            UpdateDragAndDropTable();

            $("#Question_IsOpenEnded").bt();
            $("#Question_Name").bt();

            if ($('#Question_IsOpenEnded').is(":checked")) {
                $('#openType').show();
            }

            $('#Question_IsOpenEnded').change(function () {
                if ($('#Question_IsOpenEnded').is(":checked")) {
                    $('#openType').show('fast', function () {
                        // Animation complete.
                    });
                }
                else {
                    $('#openType').hide('fast', function () {
                        // Animation complete.
                    });                    
                }
            });
        });



        function AddResponseInput(obj) {
            var index = $("#ResponseTable > tbody tr").length;
            $("#ResponseTable > tbody:last").append('<tr id="' + index + '"><td></td><td><input id="Response" class="text-box single-line" type="text" name="Response[' + index + '].Value"> </input></td><td><input id="Response" class="text-box single-line" type="text" name="Response[' + index + '].Score"> </input><input id="OrderId' + index + '" type="text" value="' + index + '" name="Response[' + index + '].Order" style="display:none"/></td><td><input id="Response_' + index + '__Remove" type="checkbox" name="Response[' + index + '].Remove" value="true"/><input type="hidden" value="false" name="Response[' + index + '].Remove"></td></tr>');

            UpdateDragAndDropTable();

        }

        function UpdateDragAndDropTable() {
            // Initialise the table
            $("table.DragnDrop").tableDnD({
                onDrop: function (table, row) {
                    //debugger;
                    var rows = table.tBodies[0].rows;
                    for (var i = 0; i < rows.length; i++) {
                        $("#OrderId" + rows[i].id).val(i);
                    }
                }
            });
        }

        $(function () {
            $(".makePrime").click(function () {
                var photoId = $(this).data("id");
                var divId = "#photo" + photoId;
                var url = '@Url.Action("MakePrimaryPhoto", "Photo", new { questionId = Model.Question.Id})';
                var antiforgery = $("input[name='__RequestVerificationToken']").val();
                $.post(url, { id: photoId, __RequestVerificationToken: antiforgery }, function (result) {
                    if (result) {
                        if (result.success === true) {
                            $(".green_border").removeClass("green_border");
                            $(divId).addClass("green_border");
                        } else {
                            alert("There was a problem making this photo the one to display with the question.");
                        }
                    } else {
                        alert("There was a problem making this photo the one to display with the question.");
                    }
                });
            });
        });

    </script>

}

@helper PhotoContainer(Photo photo)
    {
    var showBorder = Model.Question.PrimaryPhoto != null && Model.Question.PrimaryPhoto.Id == photo.Id ? "green_border" : string.Empty;
    var divId = string.Format("photo{0}", photo.Id);
    <div id = "@divId" style="display: inline-block; padding-left: 10px;" class="@showBorder">
        <div style="word-wrap: break-word; width: 100px;">@photo.Name</div>
        @if (Model.Category != null)
        {
            <div><a href="@Url.Action("Details", "Photo", new { id = photo.Id, questionId = Model.Question.Id, surveyId = Model.Survey.Id, categoryId = Model.Category.Id, editDetail = "E" })"><img src='@Url.Action("GetThumbnail", "Photo", new { id = photo.Id })' /></a></div>
            <div>
                @foreach (var tag in photo.PhotoTags)
                {
                    <a href="@Url.Action("Search", "Photo", new { tag = tag.Name, questionId = Model.Question.Id, surveyId = Model.Survey.Id, categoryId = Model.Category.Id, editDetail = "E" })">@tag.Name</a>
                }
            </div>
        }
        else
        {
            <div><a href="@Url.Action("Details", "Photo", new { id = photo.Id, questionId = Model.Question.Id, surveyId = Model.Survey.Id, editDetail = "E" })"><img src='@Url.Action("GetThumbnail", "Photo", new { id = photo.Id })' /></a></div>
            <div>
                @foreach (var tag in photo.PhotoTags)
                {
                    <a href="@Url.Action("Search", "Photo", new { tag = tag.Name, questionId = Model.Question.Id, surveyId = Model.Survey.Id, editDetail = "E" })">@tag.Name</a>
                }
            </div>
        }
        <div>@if(showBorder == string.Empty)
             {
                 <a class="button makePrime" data-id="@photo.Id" href="#">Use This Photo</a> 
             }</div>
    </div>
}


@*<h2>Edit</h2>*@

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/mvc/3.0/jquery.validate.unobtrusive.js" type="text/javascript"></script>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true)
    @Html.Hidden("surveyId", Model.Survey.Id)
    @Html.Hidden("categoryId", Model.Category != null ? Model.Category.Id : 0)
    @Html.HiddenFor(x => x.Question.Id)
<fieldset>
@* Legend is required if you have more than one widget/unit to help the user understand what is being asked of them.
Example: Dinosaur 1  *@
	@*<legend>QuestionViewModel</legend>*@
	@*<h4>Form Header</h4>*@
	@*<p>Be specific so the user understands what exactly you are looking for.  Example: After Dinosaur 1 moves out of his/her parents' den what will Dinosaur 1 do?  We need to know his employment plan, feeding area, as well as living situation.  This information will not be sold or given to carnivores.</p>*@
	<p>All required fields are in <strong>bold</strong> and have a red <span class="required">*</span> next to the field label.</p>
    <p>Click the plus button to add more Response Choices. Drag and Drop choices to change the order.</p>
    @Html.Partial("_Questions")
    
    
        <fieldset>
            <legend>Related Photos</legend>
            <fieldset>
                <legend>Click on a tag to find related photos to add</legend>
                <div style="display: inline-block">
                    @if (Model.Category != null)
                    {
                        foreach (var tag in Model.UniqueTags)
                        {
                            <a href="@Url.Action("Search", "Photo", new { tag = tag, questionId = Model.Question.Id, surveyId = Model.Survey.Id, categoryId = Model.Category.Id, editDetail = "E" })">@tag</a>
                        }
                    }
                    else
                    {
                        foreach (var tag in Model.UniqueTags)
                        {
                            <a href="@Url.Action("Search", "Photo", new { tag = tag, questionId = Model.Question.Id, surveyId = Model.Survey.Id, editDetail = "E" })">@tag</a>
                        }
                    }
                </div>
            </fieldset>
        @foreach (var item in Model.Question.Photos)
        {
            @PhotoContainer(item)        
        }
    </fieldset>
</fieldset>
}

<div>
    @if (Model.Category != null)
    {
        <a href="@Url.Action("Edit", "Category", new { id = @Model.Category.Id })">Back to List</a>
    }
    else
    {
        <a href="@Url.Action("Edit", "Survey", new { id = @Model.Survey.Id })">Back to List</a>
    }

</div>

